// <auto-generated />
using System;
using JourneyMentor.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JourneyMentor.Dal.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240408201720_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.AirportAggregate.Airport", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AirportId")
                        .HasColumnType("longtext");

                    b.Property<string>("AirportName")
                        .HasColumnType("longtext");

                    b.Property<string>("CityIataCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CountryIso2")
                        .HasColumnType("longtext");

                    b.Property<string>("CountryName")
                        .HasColumnType("longtext");

                    b.Property<string>("GeonameId")
                        .HasColumnType("longtext");

                    b.Property<string>("Gmt")
                        .HasColumnType("longtext");

                    b.Property<string>("IataCode")
                        .HasColumnType("longtext");

                    b.Property<string>("IcaoCode")
                        .HasColumnType("longtext");

                    b.Property<string>("Latitude")
                        .HasColumnType("longtext");

                    b.Property<string>("Longitude")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Timezone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Aircraft", b =>
                {
                    b.Property<Guid>("AircraftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Iata")
                        .HasColumnType("longtext");

                    b.Property<string>("Icao")
                        .HasColumnType("longtext");

                    b.Property<string>("Icao24")
                        .HasColumnType("longtext");

                    b.Property<string>("Registration")
                        .HasColumnType("longtext");

                    b.HasKey("AircraftId");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Airline", b =>
                {
                    b.Property<Guid>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Iata")
                        .HasColumnType("longtext");

                    b.Property<string>("Icao")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("AirlineId");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Arrival", b =>
                {
                    b.Property<Guid>("ArrivalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Actual")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ActualRunway")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Airport")
                        .HasColumnType("longtext");

                    b.Property<string>("Baggage")
                        .HasColumnType("longtext");

                    b.Property<int?>("Delay")
                        .HasColumnType("int");

                    b.Property<DateTime>("Estimated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EstimatedRunway")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gate")
                        .HasColumnType("longtext");

                    b.Property<string>("Iata")
                        .HasColumnType("longtext");

                    b.Property<string>("Icao")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Scheduled")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Terminal")
                        .HasColumnType("longtext");

                    b.Property<string>("Timezone")
                        .HasColumnType("longtext");

                    b.HasKey("ArrivalId");

                    b.ToTable("Arrival");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Codeshared", b =>
                {
                    b.Property<Guid>("CodesharedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AirlineIata")
                        .HasColumnType("longtext");

                    b.Property<string>("AirlineIcao")
                        .HasColumnType("longtext");

                    b.Property<string>("AirlineName")
                        .HasColumnType("longtext");

                    b.Property<string>("FlightIata")
                        .HasColumnType("longtext");

                    b.Property<string>("FlightIcao")
                        .HasColumnType("longtext");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("longtext");

                    b.HasKey("CodesharedId");

                    b.ToTable("Codeshared");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Departure", b =>
                {
                    b.Property<Guid>("DepartureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Actual")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ActualRunway")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Airport")
                        .HasColumnType("longtext");

                    b.Property<int?>("Delay")
                        .HasColumnType("int");

                    b.Property<DateTime>("Estimated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EstimatedRunway")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gate")
                        .HasColumnType("longtext");

                    b.Property<string>("Iata")
                        .HasColumnType("longtext");

                    b.Property<string>("Icao")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Scheduled")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Terminal")
                        .HasColumnType("longtext");

                    b.Property<string>("Timezone")
                        .HasColumnType("longtext");

                    b.HasKey("DepartureId");

                    b.ToTable("Departure");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Flight", b =>
                {
                    b.Property<Guid>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CodesharedId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Iata")
                        .HasColumnType("longtext");

                    b.Property<string>("Icao")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.HasKey("FlightId");

                    b.HasIndex("CodesharedId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Flights", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AircraftId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AirlineId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ArrivalId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DepartureId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FlightDate")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("FlightId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FlightStatus")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("LiveId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("AirlineId");

                    b.HasIndex("ArrivalId");

                    b.HasIndex("DepartureId");

                    b.HasIndex("FlightId");

                    b.HasIndex("LiveId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Live", b =>
                {
                    b.Property<Guid>("LiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Altitude")
                        .HasColumnType("int");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<bool>("IsGround")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<int>("SpeedHorizontal")
                        .HasColumnType("int");

                    b.Property<int>("SpeedVertical")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("LiveId");

                    b.ToTable("Live");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Flight", b =>
                {
                    b.HasOne("JourneyMentor.Domain.Aggregates.FlightAggregate.Codeshared", "Codeshared")
                        .WithMany()
                        .HasForeignKey("CodesharedId");

                    b.Navigation("Codeshared");
                });

            modelBuilder.Entity("JourneyMentor.Domain.Aggregates.FlightAggregate.Flights", b =>
                {
                    b.HasOne("JourneyMentor.Domain.Aggregates.FlightAggregate.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId");

                    b.HasOne("JourneyMentor.Domain.Aggregates.FlightAggregate.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineId");

                    b.HasOne("JourneyMentor.Domain.Aggregates.FlightAggregate.Arrival", "Arrival")
                        .WithMany()
                        .HasForeignKey("ArrivalId");

                    b.HasOne("JourneyMentor.Domain.Aggregates.FlightAggregate.Departure", "Departure")
                        .WithMany()
                        .HasForeignKey("DepartureId");

                    b.HasOne("JourneyMentor.Domain.Aggregates.FlightAggregate.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId");

                    b.HasOne("JourneyMentor.Domain.Aggregates.FlightAggregate.Live", "Live")
                        .WithMany()
                        .HasForeignKey("LiveId");

                    b.Navigation("Aircraft");

                    b.Navigation("Airline");

                    b.Navigation("Arrival");

                    b.Navigation("Departure");

                    b.Navigation("Flight");

                    b.Navigation("Live");
                });
#pragma warning restore 612, 618
        }
    }
}
